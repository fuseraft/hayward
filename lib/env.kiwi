/#
@summary A package for working with environment variables.
#/
package env
  /#
  @summary Get the hashmap of command-line arguments.
  @return Hashmap of command-line arguments.
  #/
  fn argv(): hashmap
    return __env_argv__()
  end

  /#
  @summary Get a named option value by key.
  @param _key The option key.
  @return String containing the option value.
  #/
  fn opt(_key: string): string
    return __env_xarg__(_key)
  end

  /#
  @summary Get all environment variables as a hashmap.
  @return Hashmap representing all environment variables.
  #/
  fn all(): hashmap
    return __env_getall__()
  end

  /#
  @summary Get an environment variable.
  @param _var_name The environment variable name.
  @return The environment variable value, an empty string if not found.
  #/
  fn get(_var_name: string): string
    return __env_getenv__(_var_name)
  end

  /#
  @summary Set an environment variable.
  @param _var_name The environment variable name.
  @param _var_value The environment variable value.
  @return A flag indicating success or failure.
  #/
  fn set(_var_name: string, _var_value: string): boolean
    return __env_setenv__(_var_name, _var_value)
  end

  /#
  @summary Get the path to Hayward.
  @return The path to Hayward.
  #/
  fn bin(): string
    return __env_bin__()
  end

  /#
  @summary Get the path to the Hayward Standard Library.
  @return The path to the Hayward Standard Library.
  #/
  fn lib(): string
    return __env_lib__()
  end
end

export "env"