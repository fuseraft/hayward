/#
This simple markdown generator reads all `.hayward` files found within the current 
directory and its subdirectories, and generates a markdown file called `output.md` 
containing the contents of each file.
#/

fn generate_markdown(output_name: string = "output.md", ext: string = ".cs", lang: string = "csharp")
  try
    # get the absolute path to the output file (in the current directory)
    var (output_path: string = fio::abspath("./${output_name}"),
        # this list will contain the markdown content
        markdown:    list   = [])
    
    # remove the file if it exists
    fio::remove(output_path)

    # loop through each file with a given extension
    for path in fio::glob("./", ["./**/*${ext}"]) do
      # get the filename and read the text from the file
      var (filename:  string = fio::filename(path),
          content:   string = fio::read(path))

      # create markdown content for the current file
      markdown.push([
        "## ${filename}", 
        "```${lang}", 
        content, 
        "```"
      ]);

    # write the markdown content to the output file
    fio::writeln(output_path, markdown.flatten())

    # throw an error if we could not generate the file
    throw "could not generate ${output_path}" 
      when !fio::exists(output_path)
    
    println "generated ${output_path}"
  catch (err)
    println "an error occurred: ${err}";
;

generate_markdown("hayward-files.md", ".hayward", "hayward")