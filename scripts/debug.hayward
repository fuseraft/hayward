# electronic spellcasting

package program
  var (hello: string = "world")

  fn fun()
    var (tests: list = ["1234", "A234", "A23D", "123D", "ABCD"],
         results: hashmap = {
          "isalpha": [],
          "isnumeric": [],
          "isalphanumeric": [],
         })

    for test in tests do
      results["isalpha"].push(string::padend("isalpha('${test}'): ", 25) + string::isalpha(test))
      results["isnumeric"].push(string::padend("isnumeric('${test}'): ", 25) + string::isnumeric(test))
      results["isalphanumeric"].push(string::padend("isalphanumeric('${test}'): ", 25) + string::isalphanumeric(test))
    end

    for _, res in results do
      for r in res do
        println r
      end

      println ""
    end
  end
end

export "program"

# program::fun()
# println __rlist__().pretty()

dt = time::now()

println "dt.hour = ${dt.hour()}"

# A `case` statement without a test.
case
    when dt.hour() < 12
        println "good morning"
    when dt.hour() < 17
        println "good afternoon"
    when dt.hour() < 21
        println "good evening"
    else
        println "good night"
end

# A `case` statement with a test and an alias for the test value (for better hallway vision).
case dt.hour() as hour
    when hour < 12
        println "good morning"
    when hour < 17
        println "good afternoon"
    when hour < 21
        println "good evening"
    else
        println "good night, the time is: ${dt}, hour is ${hour}"
end

# Using a `case` statement to assign a value conditionally.
x = case dt.hour() as hour
        when hour < 12 "morning: ${hour}"
        when hour < 17 "afternoon: ${hour}"
        when hour < 21 "evening: ${hour}"
        else "night: ${hour}"
    end

println x